/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package home_food_software;
//import  some java libraries-FD----------------------------------------------------------------------------------------------------------------------------------------------------
import change_items.change;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import delete_items.delete_rice1;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
/**
 *
 * @author isuru udana
 */
public class selection extends javax.swing.JFrame {
//Connection to make conn(connection)vith database-FD  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 public static int rownumber=0;
    Connection conn= null;
    PreparedStatement pre =null;
    /**
     * Creates new form selection
     */
    public selection() {
       initComponents();
        show_user();
        show_customer();
        show_email();
        
        show_rice_varietiesList();
        show_vegetablesList();
        show_meat_and_fishList();
        show_dessertList();
        show_daily_need_nutritionList();
        
        show_nutrition_meat_and_fishList();
        show_rice_nutritionList();
        show_nutrition_vegetablesList();
        show_nutrition_desertList();
        
         
        show_minarals_riceList();
        show_minarals_vegetablesList();
        show_minarals_meat_and_fishList();
        show_minarals_desertList();
         
        show_vitamins_meat_and_fishList();
        show_vitamins_riceList();
        show_vitamins_vegetablesList();
        show_vitamins_desertList();
    }
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parent_panel = new javax.swing.JPanel();
        selection_panal = new javax.swing.JPanel();
        jButton29 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        customer_orders = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        database_login = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        customer_information = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        email = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        vegetableTable = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTable18 = new javax.swing.JTable();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTable20 = new javax.swing.JTable();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTable19 = new javax.swing.JTable();
        jButton13 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        meatfishTable = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTable17 = new javax.swing.JTable();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTable15 = new javax.swing.JTable();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable16 = new javax.swing.JTable();
        jButton14 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        dessertTable = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTable14 = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        riceTable = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jTabbedPane18 = new javax.swing.JTabbedPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Home Food");
        setBackground(new java.awt.Color(255, 255, 255));

        parent_panel.setPreferredSize(new java.awt.Dimension(1140, 620));
        parent_panel.setLayout(new java.awt.CardLayout());

        selection_panal.setBackground(new java.awt.Color(255, 153, 0));
        selection_panal.setPreferredSize(new java.awt.Dimension(1140, 620));
        selection_panal.setLayout(null);

        jButton29.setText("See customer information");
        jButton29.setBorder(new javax.swing.border.MatteBorder(null));
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        selection_panal.add(jButton29);
        jButton29.setBounds(560, 210, 230, 70);

        jButton1.setText("See customer's orders");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        selection_panal.add(jButton1);
        jButton1.setBounds(560, 130, 230, 70);

        jButton2.setText("Change the database");
        jButton2.setBorder(new javax.swing.border.MatteBorder(null));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        selection_panal.add(jButton2);
        jButton2.setBounds(560, 370, 230, 70);

        jButton28.setText("See subscribes");
        jButton28.setBorder(new javax.swing.border.MatteBorder(null));
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        selection_panal.add(jButton28);
        jButton28.setBounds(560, 290, 230, 70);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Wide Latin", 0, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Select what do you want to do:");
        selection_panal.add(jLabel2);
        jLabel2.setBounds(210, 130, 370, 30);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 3, 24)); // NOI18N
        jLabel1.setText("Home");
        selection_panal.add(jLabel1);
        jLabel1.setBounds(570, 20, 70, 50);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/home_food_logo_mini.jpg"))); // NOI18N
        selection_panal.add(jLabel8);
        jLabel8.setBounds(820, 20, 260, 160);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        selection_panal.add(jLabel7);
        jLabel7.setBounds(1, 0, 1140, 620);

        parent_panel.add(selection_panal, "card2");

        customer_orders.setBackground(new java.awt.Color(204, 204, 255));
        customer_orders.setPreferredSize(new java.awt.Dimension(1140, 620));
        customer_orders.setLayout(null);

        jButton3.setText("Go to home page");
        jButton3.setBorder(new javax.swing.border.MatteBorder(null));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        customer_orders.add(jButton3);
        jButton3.setBounds(880, 280, 220, 60);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "customerId", "riceId", "vegetableId1", "vegetableId2", "vegetableId3", "vegetableId4", "meat & fishId", "dessertId", "date", "time ", "Quntity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        customer_orders.add(jScrollPane1);
        jScrollPane1.setBounds(12, 50, 1116, 164);

        jButton5.setText("Delete All");
        jButton5.setBorder(new javax.swing.border.MatteBorder(null));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        customer_orders.add(jButton5);
        jButton5.setBounds(550, 280, 220, 60);

        jButton7.setText("refish");
        jButton7.setBorder(new javax.swing.border.MatteBorder(null));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        customer_orders.add(jButton7);
        jButton7.setBounds(260, 280, 220, 60);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        customer_orders.add(jLabel9);
        jLabel9.setBounds(1, 0, 1140, 620);

        parent_panel.add(customer_orders, "card4");

        database_login.setBackground(new java.awt.Color(204, 204, 255));
        database_login.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(null);

        jTable2.setBackground(new java.awt.Color(204, 204, 255));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RiceId ", "Name_of_the_Rice"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(12, 13, 440, 400);

        jButton6.setText("Go to  rice nutrition tables");
        jButton6.setBorder(new javax.swing.border.MatteBorder(null));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(470, 388, 220, 60);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        jPanel1.add(jLabel11);
        jLabel11.setBounds(0, 0, 730, 530);

        jTabbedPane5.addTab("Rice varieties", jPanel1);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setLayout(null);

        jTable3.setBackground(new java.awt.Color(204, 204, 255));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "VegetableId ", "Name_of_the_Vegetable"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(12, 13, 440, 400);

        jButton8.setText("Go to  vegetables nutrition tables");
        jButton8.setBorder(new javax.swing.border.MatteBorder(null));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton8);
        jButton8.setBounds(470, 388, 220, 60);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        jPanel2.add(jLabel12);
        jLabel12.setBounds(0, 0, 730, 530);

        jTabbedPane5.addTab("Vegetables", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setLayout(null);

        jTable4.setBackground(new java.awt.Color(204, 204, 255));
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meat_or_FishId ", "Name_of_the_Meat_or_Fish "
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jPanel3.add(jScrollPane4);
        jScrollPane4.setBounds(12, 13, 440, 400);

        jButton9.setText("Go to  meat & fish  nutrition tables");
        jButton9.setBorder(new javax.swing.border.MatteBorder(null));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton9);
        jButton9.setBounds(470, 388, 220, 60);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        jPanel3.add(jLabel13);
        jLabel13.setBounds(0, 0, 730, 530);

        jTabbedPane5.addTab("meat and fish", jPanel3);

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setLayout(null);

        jTable5.setBackground(new java.awt.Color(204, 204, 255));
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DessertId", "Name_of_the_Dessert"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        jPanel4.add(jScrollPane5);
        jScrollPane5.setBounds(12, 13, 440, 400);

        jButton10.setText("Go to  dessert nutrition tables");
        jButton10.setBorder(new javax.swing.border.MatteBorder(null));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton10);
        jButton10.setBounds(470, 388, 220, 60);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        jPanel4.add(jLabel14);
        jLabel14.setBounds(0, 0, 730, 530);

        jTabbedPane5.addTab("Dessert", jPanel4);

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));
        jPanel5.setLayout(null);

        jTable6.setBackground(new java.awt.Color(204, 204, 255));
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nutrition_name", "daily_need_quantity"
            }
        ));
        jScrollPane6.setViewportView(jTable6);

        jPanel5.add(jScrollPane6);
        jScrollPane6.setBounds(12, 13, 440, 400);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        jPanel5.add(jLabel15);
        jLabel15.setBounds(0, 0, 730, 530);

        jTabbedPane5.addTab("daily_need_nutrition", jPanel5);

        database_login.add(jTabbedPane5);
        jTabbedPane5.setBounds(0, 0, 730, 540);

        jButton4.setText("Go to home page");
        jButton4.setBorder(new javax.swing.border.MatteBorder(null));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        database_login.add(jButton4);
        jButton4.setBounds(789, 251, 220, 60);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        database_login.add(jLabel10);
        jLabel10.setBounds(0, 0, 1140, 620);

        parent_panel.add(database_login, "card3");

        customer_information.setLayout(null);

        jTable11.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "customerID", "customer_name", "address", "Telephone_Number"
            }
        ));
        jScrollPane11.setViewportView(jTable11);

        customer_information.add(jScrollPane11);
        jScrollPane11.setBounds(52, 10, 720, 402);

        jButton33.setText("Go to home page");
        jButton33.setBorder(new javax.swing.border.MatteBorder(null));
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        customer_information.add(jButton33);
        jButton33.setBounds(850, 430, 220, 60);

        jButton34.setText("Refersh");
        jButton34.setBorder(new javax.swing.border.MatteBorder(null));
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });
        customer_information.add(jButton34);
        jButton34.setBounds(540, 430, 220, 60);

        jButton35.setText("Delete all");
        jButton35.setBorder(new javax.swing.border.MatteBorder(null));
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });
        customer_information.add(jButton35);
        jButton35.setBounds(220, 430, 220, 60);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        customer_information.add(jLabel17);
        jLabel17.setBounds(1, 0, 1140, 620);

        parent_panel.add(customer_information, "card11");

        email.setPreferredSize(new java.awt.Dimension(1140, 620));
        email.setLayout(null);

        jLabel21.setFont(new java.awt.Font("Trebuchet MS", 3, 18)); // NOI18N
        jLabel21.setText("Subscribe Emails");
        email.add(jLabel21);
        jLabel21.setBounds(389, 20, 270, 21);

        jButton30.setText("Go to home page");
        jButton30.setBorder(new javax.swing.border.MatteBorder(null));
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        email.add(jButton30);
        jButton30.setBounds(910, 470, 220, 60);

        jButton31.setText("Delet all emails");
        jButton31.setBorder(new javax.swing.border.MatteBorder(null));
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        email.add(jButton31);
        jButton31.setBounds(630, 470, 220, 60);

        jButton32.setText("Refersh");
        jButton32.setBorder(new javax.swing.border.MatteBorder(null));
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });
        email.add(jButton32);
        jButton32.setBounds(370, 470, 220, 60);

        jTable7.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Email"
            }
        ));
        jScrollPane7.setViewportView(jTable7);

        email.add(jScrollPane7);
        jScrollPane7.setBounds(110, 50, 452, 402);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        email.add(jLabel16);
        jLabel16.setBounds(1, 0, 1190, 620);

        parent_panel.add(email, "card10");

        vegetableTable.setBackground(new java.awt.Color(204, 204, 255));
        vegetableTable.setLayout(null);

        jLabel20.setFont(new java.awt.Font("Trebuchet MS", 3, 18)); // NOI18N
        jLabel20.setText("Vegetablts nutrition tables");
        vegetableTable.add(jLabel20);
        jLabel20.setBounds(389, 20, 270, 21);

        jTabbedPane3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        jTable18.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "vegetableId", "calcium", "chloride", "chromium", "copper", "fluoride", "Iodine", "iron", "magnesium", "molybdenum", "phosphorus", "potassium", "selenium", "znc", "sodium"
            }
        ));
        jScrollPane18.setViewportView(jTable18);

        jTabbedPane3.addTab("Minarals", jScrollPane18);

        jTable20.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "vegetableId", "Vitamin_A", "Thiamin", "Ribloflevin", "niacin", "pantothenic", "biotin", "piridoxine", "vitamin_B12", "folic_acid", "Vitamin_C", "Vitamin_D", "vitamin_E", "vitamin_k"
            }
        ));
        jScrollPane20.setViewportView(jTable20);

        jTabbedPane3.addTab("Vitamins", jScrollPane20);

        jTable19.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "vegitableId", "protien", "carbohydrate", "fat"
            }
        ));
        jScrollPane19.setViewportView(jTable19);

        jTabbedPane3.addTab("Nutrition", jScrollPane19);

        vegetableTable.add(jTabbedPane3);
        jTabbedPane3.setBounds(30, 50, 1090, 390);

        jButton13.setText("Go to home page");
        jButton13.setBorder(new javax.swing.border.MatteBorder(null));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        vegetableTable.add(jButton13);
        jButton13.setBounds(900, 460, 220, 60);

        jButton19.setText("Delete any Item");
        jButton19.setBorder(new javax.swing.border.MatteBorder(null));
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        vegetableTable.add(jButton19);
        jButton19.setBounds(130, 460, 220, 60);

        jButton22.setText("Insert any Item");
        jButton22.setBorder(new javax.swing.border.MatteBorder(null));
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        vegetableTable.add(jButton22);
        jButton22.setBounds(390, 460, 220, 60);

        jButton23.setText("Change a item");
        jButton23.setBorder(new javax.swing.border.MatteBorder(null));
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        vegetableTable.add(jButton23);
        jButton23.setBounds(640, 460, 220, 60);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        vegetableTable.add(jLabel4);
        jLabel4.setBounds(1, 0, 1140, 620);

        parent_panel.add(vegetableTable, "card6");

        meatfishTable.setBackground(new java.awt.Color(204, 204, 255));
        meatfishTable.setLayout(null);

        jTextField1.setBackground(new java.awt.Color(240, 240, 240));
        jTextField1.setFont(new java.awt.Font("Trebuchet MS", 3, 18)); // NOI18N
        jTextField1.setText("Meat and fish nutrition tables");
        meatfishTable.add(jTextField1);
        jTextField1.setBounds(389, 20, 270, 27);

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        jTable17.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "meat_and_fishId", "Vitamin_A", "Thiamin", "Ribloflevin", "niacin", "pantothenic", "biotin", "piridoxine", "vitamin_B12", "folic_acid", "Vitamin_C", "Vitamin_D", "vitamin_E", "vitamin_k"
            }
        ));
        jScrollPane17.setViewportView(jTable17);

        jTabbedPane2.addTab("Vitamins", jScrollPane17);

        jTable15.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "meat_and_fishId", "protien", "carbohydrate", "fat"
            }
        ));
        jScrollPane15.setViewportView(jTable15);

        jTabbedPane2.addTab("Nutrition", jScrollPane15);

        jTable16.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "meat_and_fishId", "calcium", "chloride", "chromium", "copper", "fluoride", "Iodine", "iron", "magnesium", "molybdenum", "phosphorus", "potassium", "selenium", "znc", "sodium"
            }
        ));
        jScrollPane16.setViewportView(jTable16);

        jTabbedPane2.addTab("Minarals", jScrollPane16);

        meatfishTable.add(jTabbedPane2);
        jTabbedPane2.setBounds(30, 50, 1090, 390);

        jButton14.setText("Go to home page");
        jButton14.setBorder(new javax.swing.border.MatteBorder(null));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        meatfishTable.add(jButton14);
        jButton14.setBounds(900, 460, 220, 60);

        jButton20.setText("Delete any Item");
        jButton20.setBorder(new javax.swing.border.MatteBorder(null));
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        meatfishTable.add(jButton20);
        jButton20.setBounds(130, 460, 220, 60);

        jButton24.setText("Insert any Item");
        jButton24.setBorder(new javax.swing.border.MatteBorder(null));
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        meatfishTable.add(jButton24);
        jButton24.setBounds(390, 460, 220, 60);

        jButton11.setText("Change a item");
        jButton11.setBorder(new javax.swing.border.MatteBorder(null));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        meatfishTable.add(jButton11);
        jButton11.setBounds(640, 460, 220, 60);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        meatfishTable.add(jLabel5);
        jLabel5.setBounds(1, 0, 1140, 620);

        parent_panel.add(meatfishTable, "card7");

        dessertTable.setBackground(new java.awt.Color(204, 204, 255));
        dessertTable.setLayout(null);

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 3, 18)); // NOI18N
        jLabel18.setText("Desert nutrition tables");
        dessertTable.add(jLabel18);
        jLabel18.setBounds(389, 20, 270, 21);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "dessertId", "calcium", "chloride", "chromium", "copper", "fluoride", "Iodine", "iron", "magnesium", "molybdenum", "phosphorus", "potassium", "selenium", "znc", "sodium"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(jTable12);

        jTabbedPane1.addTab("Minarals", jScrollPane12);

        jTable14.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "dessertId", "Vitamin_A", "Thiamin", "Ribloflevin", "niacin", "pantothenic", "biotin", "piridoxine", "vitamin_B12", "folic_acid", "Vitamin_C", "Vitamin_D", "vitamin_E", "vitamin_k"
            }
        ));
        jScrollPane14.setViewportView(jTable14);

        jTabbedPane1.addTab("Vitamins", jScrollPane14);

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "dessertId", "protien", "carbohydrate", "fat"
            }
        ));
        jScrollPane13.setViewportView(jTable13);

        jTabbedPane1.addTab("Nutrition", jScrollPane13);

        dessertTable.add(jTabbedPane1);
        jTabbedPane1.setBounds(30, 50, 1090, 390);

        jButton15.setText("Go to home page");
        jButton15.setBorder(new javax.swing.border.MatteBorder(null));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        dessertTable.add(jButton15);
        jButton15.setBounds(900, 460, 220, 60);

        jButton21.setText("Delete any Item");
        jButton21.setBorder(new javax.swing.border.MatteBorder(null));
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        dessertTable.add(jButton21);
        jButton21.setBounds(130, 460, 220, 60);

        jButton26.setText("Insert any item");
        jButton26.setBorder(new javax.swing.border.MatteBorder(null));
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        dessertTable.add(jButton26);
        jButton26.setBounds(390, 460, 220, 60);

        jButton27.setText("Change a item");
        jButton27.setBorder(new javax.swing.border.MatteBorder(null));
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        dessertTable.add(jButton27);
        jButton27.setBounds(640, 460, 220, 60);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        dessertTable.add(jLabel6);
        jLabel6.setBounds(1, 0, 1140, 620);

        parent_panel.add(dessertTable, "card8");

        riceTable.setBackground(new java.awt.Color(204, 204, 255));
        riceTable.setLayout(null);

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 3, 18)); // NOI18N
        jLabel19.setText("Rice nutrition tables");
        riceTable.add(jLabel19);
        jLabel19.setBounds(389, 20, 270, 21);

        jButton12.setText("Go to home page");
        jButton12.setBorder(new javax.swing.border.MatteBorder(null));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        riceTable.add(jButton12);
        jButton12.setBounds(900, 460, 220, 60);

        jButton16.setText("Delete any Item");
        jButton16.setBorder(new javax.swing.border.MatteBorder(null));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        riceTable.add(jButton16);
        jButton16.setBounds(130, 460, 220, 60);

        jButton17.setText("Insert any item");
        jButton17.setBorder(new javax.swing.border.MatteBorder(null));
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        riceTable.add(jButton17);
        jButton17.setBounds(390, 460, 220, 60);

        jButton18.setText("Change a item");
        jButton18.setBorder(new javax.swing.border.MatteBorder(null));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        riceTable.add(jButton18);
        jButton18.setBounds(640, 460, 220, 60);

        jTabbedPane18.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "dessertId", "calcium", "chloride", "chromium", "copper", "fluoride", "Iodine", "iron", "magnesium", "molybdenum", "phosphorus", "potassium", "selenium", "znc", "sodium"
            }
        ));
        jScrollPane8.setViewportView(jTable8);

        jTabbedPane18.addTab("Minarals", jScrollPane8);

        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RiceId", "Vitamin_A", "Thiamin", "Ribloflevin", "niacin", "pantothenic", "biotin", "piridoxine", "vitamin_B12", "folic_acid", "Vitamin_C", "Vitamin_D", "vitamin_E", "vitamin_k"
            }
        ));
        jScrollPane10.setViewportView(jTable10);

        jTabbedPane18.addTab("Vitamins", jScrollPane10);

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RiceId", "protien", "carbohydrate", "fat"
            }
        ));
        jScrollPane9.setViewportView(jTable9);

        jTabbedPane18.addTab("Nutrition", jScrollPane9);

        riceTable.add(jTabbedPane18);
        jTabbedPane18.setBounds(30, 50, 1090, 390);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_food_software/images/bg_3.jpg"))); // NOI18N
        riceTable.add(jLabel3);
        jLabel3.setBounds(1, 0, 1140, 620);

        parent_panel.add(riceTable, "card5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parent_panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parent_panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //got database_login panal-FD-----------------------------------------------------------------------------------------------------------------
       update();
      
        parent_panel.removeAll();
       parent_panel.add(database_login);
       parent_panel.repaint();
       parent_panel.revalidate();
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //goto customer_orders panal-FD--------------------------------------------------------------------------------------------------------------------------
      DefaultTableModel mode1=(DefaultTableModel)jTable11.getModel();
         mode1.setRowCount(0);
         show_customer();
         
         
         
           DefaultTableModel mode2=(DefaultTableModel)jTable1.getModel();
         mode2.setRowCount(0);
          show_user();
          
           DefaultTableModel mode3=(DefaultTableModel)jTable7.getModel();
         mode3.setRowCount(0);
         show_email();
        
        
        
        parent_panel.removeAll();
       parent_panel.add(customer_orders);
       parent_panel.repaint();
       parent_panel.revalidate();
       
       
        
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //again goto selection panal-FD--------------------------------------------------------------------------------------------------------------------------
       parent_panel.removeAll();
       parent_panel.add(selection_panal);
       parent_panel.repaint();
       parent_panel.revalidate();
    
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //again goto selection panal-FD--------------------------------------------------------------------------------------------------------------------------
        parent_panel.removeAll();
        parent_panel.add(selection_panal);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
       //delete all in order table -FD ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
       
       delete();
         DefaultTableModel mode1=(DefaultTableModel)jTable11.getModel();
         mode1.setRowCount(0);
         show_customer();
         
         
         
           DefaultTableModel mode2=(DefaultTableModel)jTable1.getModel();
         mode2.setRowCount(0);
          show_user();
          
           DefaultTableModel mode3=(DefaultTableModel)jTable7.getModel();
         mode3.setRowCount(0);
         show_email();
    
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel mode1=(DefaultTableModel)jTable11.getModel();
         mode1.setRowCount(0);
         show_customer();
         
         
         
           DefaultTableModel mode2=(DefaultTableModel)jTable1.getModel();
         mode2.setRowCount(0);
          show_user();
          
           DefaultTableModel mode3=(DefaultTableModel)jTable7.getModel();
         mode3.setRowCount(0);
         show_email();
          
          
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         parent_panel.removeAll();
        parent_panel.add(riceTable);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         parent_panel.removeAll();
        parent_panel.add(vegetableTable);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        parent_panel.removeAll();
        parent_panel.add(meatfishTable);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
          parent_panel.removeAll();
        parent_panel.add(dessertTable);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
         parent_panel.removeAll();
        parent_panel.add(selection_panal);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
         parent_panel.removeAll();
        parent_panel.add(selection_panal);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
         parent_panel.removeAll();
        parent_panel.add(selection_panal);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        
         parent_panel.removeAll();
        parent_panel.add(selection_panal);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
         String[] args = null;
         delete_rice1.delete_rice1_main(args);
        
        
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
         String[] args = null;
         delete_rice1.delete_rice1_main(args);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
         String[] args = null;
         delete_rice1.delete_rice1_main(args);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
         String[] args = null;
         delete_rice1.delete_rice1_main(args);
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
         String[] args = null;
        insert_items.insert.insert_main(args);
        close();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
         String[] args = null;
        change.changemain(args);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
          String[] args = null;
        insert_items.insert.insert_main(args);
        close();
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
          String[] args = null;
        insert_items.insert.insert_main(args);
        close();
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
          String[] args = null;
        insert_items.insert.insert_main(args);
        close();
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mode3=(DefaultTableModel)jTable7.getModel();
         mode3.setRowCount(0);
         show_email();
         parent_panel.removeAll();
        parent_panel.add(email);
        parent_panel.repaint();
        parent_panel.revalidate();
        
        
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel mode1=(DefaultTableModel)jTable11.getModel();
         mode1.setRowCount(0);
         show_customer();
         
         
         
           DefaultTableModel mode2=(DefaultTableModel)jTable1.getModel();
         mode2.setRowCount(0);
          show_user();
          
           DefaultTableModel mode3=(DefaultTableModel)jTable7.getModel();
         mode3.setRowCount(0);
         show_email();
         parent_panel.removeAll();
        parent_panel.add(customer_information);
        parent_panel.repaint();
        parent_panel.revalidate();
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
             parent_panel.removeAll();
       parent_panel.add(selection_panal);
       parent_panel.repaint();
       parent_panel.revalidate();
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mode3=(DefaultTableModel)jTable7.getModel();
         mode3.setRowCount(0);
         show_email();
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
       deleteEmail();
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel mode1=(DefaultTableModel)jTable11.getModel();
         mode1.setRowCount(0);
         show_customer();
         
         
         
           DefaultTableModel mode2=(DefaultTableModel)jTable1.getModel();
         mode2.setRowCount(0);
          show_user();
          
           DefaultTableModel mode3=(DefaultTableModel)jTable7.getModel();
         mode2.setRowCount(0);
         show_email();
         
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        // TODO add your handling code here:
        delete();
         DefaultTableModel mode1=(DefaultTableModel)jTable11.getModel();
         mode1.setRowCount(0);
         show_customer();
         
         
         
           DefaultTableModel mode2=(DefaultTableModel)jTable1.getModel();
         mode2.setRowCount(0);
          show_user();
          
           DefaultTableModel mode3=(DefaultTableModel)jTable7.getModel();
         mode3.setRowCount(0);
         show_email();
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
           parent_panel.removeAll();
       parent_panel.add(selection_panal);
       parent_panel.repaint();
       parent_panel.revalidate();
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
         String[] args = null;
        change.changemain(args);
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
         String[] args = null;
        change.changemain(args);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
         String[] args = null;
        change.changemain(args);
    }//GEN-LAST:event_jButton23ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void selectionmain(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new selection().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel customer_information;
    private javax.swing.JPanel customer_orders;
    private javax.swing.JPanel database_login;
    private javax.swing.JPanel dessertTable;
    private javax.swing.JPanel email;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane18;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable14;
    private javax.swing.JTable jTable15;
    private javax.swing.JTable jTable16;
    private javax.swing.JTable jTable17;
    private javax.swing.JTable jTable18;
    private javax.swing.JTable jTable19;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable20;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel meatfishTable;
    private javax.swing.JPanel parent_panel;
    private javax.swing.JPanel riceTable;
    private javax.swing.JPanel selection_panal;
    private javax.swing.JPanel vegetableTable;
    // End of variables declaration//GEN-END:variables
//order-FD---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    public ArrayList<order> orderList(){
        ArrayList<order>orderList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q="SELECT * FROM `orderd` WHERE 1";
          Statement st= conn.createStatement();
          ResultSet rs=st.executeQuery(q);
         order order1;
          while (rs.next()){
              order1= new order(rs.getInt("customerId"),rs.getString("vegetableId1"),rs.getString("vegetableId2"),rs.getString("vegetableId3"),rs.getString("vegetableId4"),
                  rs.getString("meat_and_fishId"),rs.getString("riceId"),rs.getString("dessertId"), rs.getString("date"),rs.getString("time"),rs.getInt("Quntity"));
                 

               orderList.add(order1);
          }  
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return orderList;
        
        
        
    }
    public void show_user(){
        
     
  ArrayList<order> list = orderList();
  DefaultTableModel mode1=(DefaultTableModel)jTable1.getModel();
 
  
  Object[] row =new Object[11];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getcustomerId();
  row[1]=list.get(i). getriceId();
 row[2]=list.get(i).getvegetableId1();
  row[3]=list.get(i).getvegetableId2();
  row[4]=list.get(i).getvegetableId3();
  row[5]=list.get(i).getvegetableId4();
  row[6]=list.get(i).getmeat_and_fishId();
  row[7]=list.get(i). getdessertId();
  row[8]=list.get(i).getdate();
  row[9]=list.get(i).gettime();
  row[10]=list.get(i).getQuntity();
 
  mode1.addRow(row);

 
 }
}
    //--------------------------------------------------------------------------------------------------------------------------------------
    
    
    
     public ArrayList<customer> customerList(){
        ArrayList<customer>customerList =new ArrayList<>();
    try {
       
          
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q="SELECT * FROM `customer` WHERE 1";
          Statement st= conn.createStatement();
          ResultSet rs=st.executeQuery(q);
          customer  customer1;
          while (rs.next()){
               customer1= new  customer(rs.getInt("customerId"),rs.getString("customer_name"),rs.getString("address"),rs.getString("Telephone_Number"));
                 

               customerList.add(customer1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return customerList;
    }
    
    
    
    
    
     public void show_customer(){
        
     
  ArrayList<customer> list = customerList();
  DefaultTableModel mode2=(DefaultTableModel)jTable11.getModel();
 
  
  Object[] row =new Object[4];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getcustomerId();
  row[1]=list.get(i).getcustomer_name();
  row[2]=list.get(i).getaddress();
  row[3]=list.get(i).getTelephone_Number();
  
  mode2.addRow(row);

 
 }
}
    //-----------------------------------------------------------------------------------------
     public ArrayList<email> emailList(){
        ArrayList<email>emailList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q="SELECT * FROM `email` WHERE 1";
          Statement st= conn.createStatement();
          ResultSet rs=st.executeQuery(q);
          email  email1;
          while (rs.next()){
               email1= new  email(rs.getString("emali_address"));
                 

               emailList.add(email1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return emailList;
    }
    
    
    
    
    
     public void show_email(){
        
     
  ArrayList<email> list = emailList();
  DefaultTableModel mode4=(DefaultTableModel)jTable7.getModel();
 
  
  Object[] row =new Object[1];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getemali_address();
  
  
  mode4.addRow(row);

 
 }
}
    
     
         
   public void deleteEmail(){   
              
              
     try {
            
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
           Statement st = conn.createStatement();
           st = conn.createStatement();
            st.executeUpdate("DELETE FROM `email` WHERE 1");
            
		st.close();
		conn.close(); 
         
        
           DefaultTableModel mode1=(DefaultTableModel)jTable7.getModel();
          mode1.setRowCount(0);
          show_email();
         
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        }
   JOptionPane.showMessageDialog(null,"delet success!!!");
   } 
           
           
           
          
     
     
     
     
     
     
// rice_varieties-Fd------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    public ArrayList<rice_varieties> rice_varietiesList(){
        ArrayList<rice_varieties>rice_varietiesList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q1="SELECT * FROM `rice_varieties` WHERE 1";
          Statement st1= conn.createStatement();
          ResultSet rs1=st1.executeQuery(q1);
         rice_varieties rice_varieties1;
          while (rs1.next()){
              rice_varieties1= new rice_varieties(rs1.getInt("RiceId"),rs1.getString("Name_of_the_Rice"));
                 rice_varietiesList.add(rice_varieties1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return rice_varietiesList;
    }
    public void show_rice_varietiesList(){
  ArrayList<rice_varieties> list = rice_varietiesList();
  DefaultTableModel mode1=(DefaultTableModel)jTable2.getModel();
   Object[] row =new Object[2];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getRiceId();
  row[1]=list.get(i). getName_of_the_Rice();

  mode1.addRow(row);
    }    
    
    } 
  //vegetablesList-Fd--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
 public ArrayList<vegetables> vegetablesList(){
        ArrayList<vegetables>vegetablesList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q2="SELECT * FROM `vegetables` WHERE 1";
          Statement st2= conn.createStatement();
          ResultSet rs2=st2.executeQuery(q2);
         vegetables vegetables1;
          while (rs2.next()){
             vegetables1= new vegetables(rs2.getInt("VegetableId"),rs2.getString("Name_of_the_Vegetable"));
                vegetablesList.add(vegetables1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return vegetablesList;
    }
    
 public void show_vegetablesList(){
  ArrayList<vegetables> list = vegetablesList();
  DefaultTableModel mode2=(DefaultTableModel)jTable3.getModel();
  Object[] row =new Object[2];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getVegetableId();
  row[1]=list.get(i). getName_of_the_Vegetable();

  mode2.addRow(row);
    }    
    }
    
 // meat_and_fishList-FD------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
    
 public ArrayList<meat_and_fish> meat_and_fishList(){
        ArrayList<meat_and_fish>meat_and_fishList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q3="SELECT * FROM `meat_and_fish` WHERE 1";
          Statement st3= conn.createStatement();
          ResultSet rs3=st3.executeQuery(q3);
         meat_and_fish meat_and_fish1;
          while (rs3.next()){
             meat_and_fish1= new meat_and_fish(rs3.getInt("Meat_or_FishId"),rs3.getString("Name_of_the_Meat_or_Fish"));
              meat_and_fishList.add(meat_and_fish1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return meat_and_fishList;
    }  
 public void show_meat_and_fishList(){
  ArrayList<meat_and_fish> list = meat_and_fishList();
  DefaultTableModel mode3=(DefaultTableModel)jTable4.getModel();
    mode3.setRowCount(0);
  Object[] row =new Object[2];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getMeat_or_FishId();
  row[1]=list.get(i). getName_of_the_Meat_or_Fish();
   mode3.addRow(row);
    }    
    } 
//dessertList-FD-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    

 public ArrayList<dessert> dessertList(){
        ArrayList<dessert>dessertList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q3="SELECT * FROM `dessert` WHERE 1";
          Statement st3= conn.createStatement();
          ResultSet rs3=st3.executeQuery(q3);
         dessert dessert1;
          while (rs3.next()){
             dessert1= new dessert(rs3.getInt("DessertId"),rs3.getString("Name_of_the_Dessert"));
             dessertList.add( dessert1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return  dessertList;
    }   
 public void show_dessertList(){
  ArrayList<dessert> list = dessertList();
  DefaultTableModel mode4=(DefaultTableModel)jTable5.getModel();
  Object[] row =new Object[2];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getDessertId();
  row[1]=list.get(i). getName_of_the_Dessert();

  mode4.addRow(row);
    }    
    } 
 
 
 
 //daily_need_nutrition-FD-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 public ArrayList<daily_need_nutrition> daily_need_nutritionList(){
        ArrayList<daily_need_nutrition>daily_need_nutritionList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q4="SELECT * FROM `daily_need_nutrition` WHERE 1";
          Statement st4= conn.createStatement();
          ResultSet rs4=st4.executeQuery(q4);
         daily_need_nutrition daily_need_nutrition1;
          while (rs4.next()){
            daily_need_nutrition1= new daily_need_nutrition(rs4.getString("nutrition_name"),rs4.getInt("daily_need_quantity"));
             daily_need_nutritionList.add(daily_need_nutrition1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return  daily_need_nutritionList;
    }   
 public void show_daily_need_nutritionList(){
  ArrayList<daily_need_nutrition> list = daily_need_nutritionList();
  DefaultTableModel mode5=(DefaultTableModel)jTable6.getModel();
  Object[] row =new Object[2];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getnutrition_name();
  row[1]=list.get(i). getdaily_need_quantity();

  mode5.addRow(row);
    }    
    }   
 //______________________________________________________minarals_______________________________________________________________________________________________________________________ 
 
 public ArrayList<minarals_rice> minarals_riceList(){
        ArrayList<minarals_rice>minarals_riceList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q1="SELECT * FROM `content_minarals_for_rice` WHERE 1";
          Statement st1= conn.createStatement();
          ResultSet rs1=st1.executeQuery(q1);
        minarals_rice minarals_rice1;
          while (rs1.next()){
              minarals_rice1= new  minarals_rice(rs1.getInt("RiceId"),rs1.getFloat("calcium"),rs1.getFloat("chloride"),rs1.getFloat("chromium"),rs1.getFloat("copper"),rs1.getFloat("fluoride"),
              rs1.getFloat("Iodine"),rs1.getFloat("iron"),rs1.getFloat("magnesium"),rs1.getFloat("molybdenum"),rs1.getFloat("phosphorus"),rs1.getFloat("potassium"),
                      rs1.getFloat("selenium"),rs1.getFloat("znc"),rs1.getFloat("sodium"));
                 minarals_riceList.add(minarals_rice1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return minarals_riceList;
    }
 public void show_minarals_riceList(){
  ArrayList<minarals_rice> list = minarals_riceList();
  DefaultTableModel mode6=(DefaultTableModel)jTable8.getModel();
   Object[] row =new Object[15];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getRiceId();
  row[1]=list.get(i).getcalcium();
  row[2]=list.get(i).getchloride();
  row[3]=list.get(i).getchromium();
  row[4]=list.get(i).getcopper();
  row[5]=list.get(i).getfluoride();
  row[6]=list.get(i).getIodine();
  row[7]=list.get(i).getiron();
  row[8]=list.get(i).getmagnesium();
  row[9]=list.get(i).getmolybdenum();
  row[10]=list.get(i).getphosphorus();
  row[11]=list.get(i).getpotassium();
  row[12]=list.get(i).getselenium();
  row[13]=list.get(i).getznc();
  row[14]=list.get(i).getsodium();

  mode6.addRow(row);
    }    
    
    }       
 
 
 
 public ArrayList<minarals_vegetables>minarals_vegetablesList(){
        ArrayList<minarals_vegetables>minarals_vegetablesList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q1="SELECT * FROM `content_minarals_for_vegetables` WHERE 1";
          Statement st1= conn.createStatement();
          ResultSet rs1=st1.executeQuery(q1);
       minarals_vegetables minarals_vegetables1;
          while (rs1.next()){
              minarals_vegetables1= new minarals_vegetables(rs1.getInt("vegetableId"),rs1.getFloat("calcium"),rs1.getFloat("chloride"),rs1.getFloat("chromium"),rs1.getFloat("copper"),rs1.getFloat("fluoride"),
              rs1.getFloat("Iodine"),rs1.getFloat("iron"),rs1.getFloat("magnesium"),rs1.getFloat("molybdenum"),rs1.getFloat("phosphorus"),rs1.getFloat("potassium"),
                      rs1.getFloat("selenium"),rs1.getFloat("znc"),rs1.getFloat("sodium"));
                 minarals_vegetablesList.add(minarals_vegetables1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return minarals_vegetablesList;
    }
 public void show_minarals_vegetablesList(){
  ArrayList<minarals_vegetables> list = minarals_vegetablesList();
  DefaultTableModel mode10=(DefaultTableModel)jTable18.getModel();
   Object[] row =new Object[15];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getvegetableId();
  row[1]=list.get(i).getcalcium();
  row[2]=list.get(i).getchloride();
  row[3]=list.get(i).getchromium();
  row[4]=list.get(i).getcopper();
  row[5]=list.get(i).getfluoride();
  row[6]=list.get(i).getIodine();
  row[7]=list.get(i).getiron();
  row[8]=list.get(i).getmagnesium();
  row[9]=list.get(i).getmolybdenum();
  row[10]=list.get(i).getphosphorus();
  row[11]=list.get(i).getpotassium();
  row[12]=list.get(i).getselenium();
  row[13]=list.get(i).getznc();
  row[14]=list.get(i).getsodium();

  mode10.addRow(row);
    }    
    
    }       
 
 
 public ArrayList<minarals_meat_and_fish >minarals_meat_and_fishList(){
        ArrayList<minarals_meat_and_fish >minarals_meat_and_fishList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q1="SELECT * FROM `content_minarals_for_meat_and_fish` WHERE 1";
          Statement st1= conn.createStatement();
          ResultSet rs1=st1.executeQuery(q1);
       minarals_meat_and_fish minarals_meat_and_fish1;
          while (rs1.next()){
              minarals_meat_and_fish1= new minarals_meat_and_fish(rs1.getInt("meat_and_fishId"),rs1.getFloat("calcium"),rs1.getFloat("chloride"),rs1.getFloat("chromium"),rs1.getFloat("copper"),rs1.getFloat("fluoride"),
              rs1.getFloat("Iodine"),rs1.getFloat("iron"),rs1.getFloat("magnesium"),rs1.getFloat("molybdenum"),rs1.getFloat("phosphorus"),rs1.getFloat("potassium"),
                      rs1.getFloat("selenium"),rs1.getFloat("znc"),rs1.getFloat("sodium"));
                 minarals_meat_and_fishList.add(minarals_meat_and_fish1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return minarals_meat_and_fishList;
    }
 public void show_minarals_meat_and_fishList(){
  ArrayList<minarals_meat_and_fish> list = minarals_meat_and_fishList();
  DefaultTableModel mode10=(DefaultTableModel)jTable16.getModel();
   Object[] row =new Object[15];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getmeat_and_fishId();
  row[1]=list.get(i).getcalcium();
  row[2]=list.get(i).getchloride();
  row[3]=list.get(i).getchromium();
  row[4]=list.get(i).getcopper();
  row[5]=list.get(i).getfluoride();
  row[6]=list.get(i).getIodine();
  row[7]=list.get(i).getiron();
  row[8]=list.get(i).getmagnesium();
  row[9]=list.get(i).getmolybdenum();
  row[10]=list.get(i).getphosphorus();
  row[11]=list.get(i).getpotassium();
  row[12]=list.get(i).getselenium();
  row[13]=list.get(i).getznc();
  row[14]=list.get(i).getsodium();

  mode10.addRow(row);
    }    
    
    }       
 

 public ArrayList<minarals_desert >minarals_desertList(){
        ArrayList<minarals_desert >minarals_desertList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q1="SELECT * FROM `content_minarals_for_dessert` WHERE 1";
          Statement st1= conn.createStatement();
          ResultSet rs1=st1.executeQuery(q1);
       minarals_desert minarals_desert1;
          while (rs1.next()){
              minarals_desert1= new minarals_desert(rs1.getInt("dessertId"),rs1.getFloat("calcium"),rs1.getFloat("chloride"),rs1.getFloat("chromium"),rs1.getFloat("copper"),rs1.getFloat("fluoride"),
              rs1.getFloat("Iodine"),rs1.getFloat("iron"),rs1.getFloat("magnesium"),rs1.getFloat("molybdenum"),rs1.getFloat("phosphorus"),rs1.getFloat("potassium"),
                      rs1.getFloat("selenium"),rs1.getFloat("znc"),rs1.getFloat("sodium"));
                 minarals_desertList.add(minarals_desert1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return minarals_desertList;
    }
 public void show_minarals_desertList(){
  ArrayList<minarals_desert> list = minarals_desertList();
  DefaultTableModel mode10=(DefaultTableModel)jTable12.getModel();
   Object[] row =new Object[15];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getdessertId();
  row[1]=list.get(i).getcalcium();
  row[2]=list.get(i).getchloride();
  row[3]=list.get(i).getchromium();
  row[4]=list.get(i).getcopper();
  row[5]=list.get(i).getfluoride();
  row[6]=list.get(i).getIodine();
  row[7]=list.get(i).getiron();
  row[8]=list.get(i).getmagnesium();
  row[9]=list.get(i).getmolybdenum();
  row[10]=list.get(i).getphosphorus();
  row[11]=list.get(i).getpotassium();
  row[12]=list.get(i).getselenium();
  row[13]=list.get(i).getznc();
  row[14]=list.get(i).getsodium();

  mode10.addRow(row);
    }    
    
    }       
 
 
 
 
 
 
          
 //____________________________________nutrition__________________________________________________________________________________________________________________________
 
public ArrayList<rice_nutrition> rice_nutritionList(){
        ArrayList<rice_nutrition>rice_nutritionList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q6="SELECT * FROM `content_nutrition_for_rice` WHERE 1";
          Statement st6= conn.createStatement();
          ResultSet rs6=st6.executeQuery(q6);
         rice_nutrition rice_nutrition1;
          while (rs6.next()){
             rice_nutrition1= new rice_nutrition(rs6.getInt("RiceId"),rs6.getFloat("protien"),rs6.getFloat("carbohydrate"),rs6.getFloat("fat"));
                rice_nutritionList.add(rice_nutrition1);
          }
        }
    
  
    
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return rice_nutritionList;
    }
public void show_rice_nutritionList(){
 
      
  ArrayList<rice_nutrition> list = rice_nutritionList();

  DefaultTableModel mode7=(DefaultTableModel)jTable9.getModel();

 Object[] row =new Object[4];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getRiceId();
  row[1]=list.get(i). getprotien();
  row[2]=list.get(i). getcarbohydrate();
  row[3]=list.get(i). getfat();

  mode7.addRow(row);
  
    }    
    }   

  
 public ArrayList<nutrition_vegetables> nutrition_vegetablesList(){
        ArrayList<nutrition_vegetables>nutrition_vegetablesList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q6="SELECT * FROM `content_nutrition_for_vegetables` WHERE 1";
          Statement st6= conn.createStatement();
          ResultSet rs6=st6.executeQuery(q6);
         nutrition_vegetables nutrition_vegetables1;
          while (rs6.next()){
             nutrition_vegetables1= new nutrition_vegetables(rs6.getInt("vegitableId"),rs6.getFloat("protien"),rs6.getFloat("carbohydrate"),rs6.getFloat("fat"));
              nutrition_vegetablesList.add(nutrition_vegetables1);
          }
        }
    
  
    
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return nutrition_vegetablesList;
    }
 public void show_nutrition_vegetablesList(){
 
      
  ArrayList<nutrition_vegetables> list = nutrition_vegetablesList();
 DefaultTableModel mode8=null;
 mode8=(DefaultTableModel)jTable19.getModel();

 Object[] row =new Object[4];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getvegitableId();
  row[1]=list.get(i). getprotien();
  row[2]=list.get(i). getcarbohydrate();
  row[3]=list.get(i). getfat();

  mode8.addRow(row);
  
    }    
    }     

  
  
 public ArrayList<nutrition_meat_and_fish> nutrition_meat_and_fishList(){
        ArrayList<nutrition_meat_and_fish>nutrition_meat_and_fishList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q6="SELECT * FROM `content_nutrition_for_meat_and_fish` WHERE 1";
          Statement st6= conn.createStatement();
          ResultSet rs6=st6.executeQuery(q6);
         nutrition_meat_and_fish nutrition_meat_and_fish1;
          while (rs6.next()){
             nutrition_meat_and_fish1= new nutrition_meat_and_fish(rs6.getInt("meat_and_fishId"),rs6.getFloat("protien"),rs6.getFloat("carbohydrate"),rs6.getFloat("fat"));
              nutrition_meat_and_fishList.add(nutrition_meat_and_fish1);
          }
        }
    
  
    
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return nutrition_meat_and_fishList;
    }
 public void show_nutrition_meat_and_fishList(){
 
      
  ArrayList<nutrition_meat_and_fish> list = nutrition_meat_and_fishList();
 DefaultTableModel mode8=null;
 mode8=(DefaultTableModel)jTable15.getModel();

 Object[] row =new Object[4];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getmeat_and_fishId();
  row[1]=list.get(i). getprotien();
  row[2]=list.get(i). getcarbohydrate();
  row[3]=list.get(i). getfat();

  mode8.addRow(row);
  
    }    
    }     
  
  
 public ArrayList<nutrition_desert> nutrition_desertList(){
        ArrayList<nutrition_desert>nutrition_desertList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q6="SELECT * FROM `content_nutrition_for_dessert` WHERE 1";
          Statement st6= conn.createStatement();
          ResultSet rs6=st6.executeQuery(q6);
         nutrition_desert nutrition_desert1;
          while (rs6.next()){
             nutrition_desert1= new nutrition_desert(rs6.getInt("dessertId"),rs6.getFloat("protien"),rs6.getFloat("carbohydrate"),rs6.getFloat("fat"));
              nutrition_desertList.add(nutrition_desert1);
          }
        }
    
  
    
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return nutrition_desertList;
    }
 public void show_nutrition_desertList(){
 
      
  ArrayList<nutrition_desert> list = nutrition_desertList();
 DefaultTableModel mode8=null;
 mode8=(DefaultTableModel)jTable13.getModel();

 Object[] row =new Object[4];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getdessertId();
  row[1]=list.get(i). getprotien();
  row[2]=list.get(i). getcarbohydrate();
  row[3]=list.get(i). getfat();

  mode8.addRow(row);
  
    }    
    }      
  
  
  

  
 //____________________________________vitamins____________________________________________________________________________________________________________________________// 
  
 public ArrayList<vitamins_rice> vitamins_riceList(){
        ArrayList<vitamins_rice>vitamins_riceList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q1="SELECT * FROM `content_vitamins_in_rice` WHERE 1";
          Statement st1= conn.createStatement();
          ResultSet rs1=st1.executeQuery(q1);
        vitamins_rice vitamins_rice1;
          while (rs1.next()){
              vitamins_rice1= new  vitamins_rice(rs1.getInt("RiceId"),rs1.getFloat("Vitamin_A"),rs1.getFloat("Thiamin"),rs1.getFloat("Ribloflevin"),rs1.getFloat("niacin"),rs1.getFloat("pantothenic"),
              rs1.getFloat("biotin"),rs1.getFloat("piridoxine"),rs1.getFloat("vitamin_B12"),rs1.getFloat("folic_acid"),rs1.getFloat("Vitamin_C"),rs1.getFloat("Vitamin_D"),
                      rs1.getFloat("vitamin_E"),rs1.getFloat("vitamin_k"));
                 vitamins_riceList.add(vitamins_rice1);
          }    
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return vitamins_riceList;
    }
 public void show_vitamins_riceList(){
  ArrayList<vitamins_rice> list =vitamins_riceList();
  DefaultTableModel mode8=(DefaultTableModel)jTable10.getModel();
   Object[] row =new Object[14];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getRiceId();
  row[1]=list.get(i).getVitamin_A();
  row[2]=list.get(i).getThiamin();
  row[3]=list.get(i).getRibloflevin();
  row[4]=list.get(i).getniacin();
  row[5]=list.get(i).getpantothenic();
  row[6]=list.get(i).getbiotin();
  row[7]=list.get(i).getpiridoxine();
  row[8]=list.get(i).getvitamin_B12();
  row[9]=list.get(i).getfolic_acid();
  row[10]=list.get(i).getVitamin_C();
  row[11]=list.get(i).getVitamin_D();
  row[12]=list.get(i).getvitamin_E();
  row[13]=list.get(i).getvitamin_k();
  

  mode8.addRow(row);
    }    
  
    }                  
  

 public ArrayList<vitamins_vegetables> vitamins_vegetablesList(){
        ArrayList<vitamins_vegetables>vitamins_vegetablesList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q1="SELECT * FROM `content_vitamins_in_vegetables` WHERE 1";
          Statement st1= conn.createStatement();
          ResultSet rs1=st1.executeQuery(q1);
        vitamins_vegetables vitamins_vegetables1;
          while (rs1.next()){
              vitamins_vegetables1= new  vitamins_vegetables(rs1.getInt("vegetableId"),rs1.getFloat("Vitamin_A"),rs1.getFloat("Thiamin"),rs1.getFloat("Ribloflevin"),rs1.getFloat("niacin"),rs1.getFloat("pantothenic"),
              rs1.getFloat("biotin"),rs1.getFloat("piridoxine"),rs1.getFloat("vitamin_B12"),rs1.getFloat("folic_acid"),rs1.getFloat("Vitamin_C"),rs1.getFloat("Vitamin_D"),
                      rs1.getFloat("vitamin_E"),rs1.getFloat("vitamin_k"));
                 vitamins_vegetablesList.add(vitamins_vegetables1);
          }    
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return vitamins_vegetablesList;
    }
 public void show_vitamins_vegetablesList(){
  ArrayList<vitamins_vegetables> list =vitamins_vegetablesList();
  DefaultTableModel mode9=(DefaultTableModel)jTable20.getModel();
   Object[] row =new Object[14];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getvegetableId();
  row[1]=list.get(i).getVitamin_A();
  row[2]=list.get(i).getThiamin();
  row[3]=list.get(i).getRibloflevin();
  row[4]=list.get(i).getniacin();
  row[5]=list.get(i).getpantothenic();
  row[6]=list.get(i).getbiotin();
  row[7]=list.get(i).getpiridoxine();
  row[8]=list.get(i).getvitamin_B12();
  row[9]=list.get(i).getfolic_acid();
  row[10]=list.get(i).getVitamin_C();
  row[11]=list.get(i).getVitamin_D();
  row[12]=list.get(i).getvitamin_E();
  row[13]=list.get(i).getvitamin_k();
  

  mode9.addRow(row);
    }    
  
    }        
  
 
 public ArrayList<vitamins_meat_and_fish> vitamins_meat_and_fishList(){
        ArrayList<vitamins_meat_and_fish>vitamins_meat_and_fishList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q1="SELECT * FROM `content_vitamins_in_meat_and_fish` WHERE 1";
          Statement st1= conn.createStatement();
          ResultSet rs1=st1.executeQuery(q1);
        vitamins_meat_and_fish vitamins_meat_and_fish1;
          while (rs1.next()){
              vitamins_meat_and_fish1= new  vitamins_meat_and_fish(rs1.getInt("meat_and_fishId"),rs1.getFloat("Vitamin_A"),rs1.getFloat("Thiamin"),rs1.getFloat("Ribloflevin"),rs1.getInt("niacin"),rs1.getInt("pantothenic"),
              rs1.getFloat("biotin"),rs1.getFloat("piridoxine"),rs1.getFloat("vitamin_B12"),rs1.getFloat("folic_acid"),rs1.getFloat("Vitamin_C"),rs1.getFloat("Vitamin_D"),
                      rs1.getFloat("vitamin_E"),rs1.getFloat("vitamin_k"));
                 vitamins_meat_and_fishList.add(vitamins_meat_and_fish1);
          }    
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return vitamins_meat_and_fishList;
    }
 public void show_vitamins_meat_and_fishList(){
  ArrayList<vitamins_meat_and_fish> list =vitamins_meat_and_fishList();
  DefaultTableModel mode9=(DefaultTableModel)jTable17.getModel();
   Object[] row =new Object[14];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getmeat_and_fishId();
  row[1]=list.get(i).getVitamin_A();
  row[2]=list.get(i).getThiamin();
  row[3]=list.get(i).getRibloflevin();
  row[4]=list.get(i).getniacin();
  row[5]=list.get(i).getpantothenic();
  row[6]=list.get(i).getbiotin();
  row[7]=list.get(i).getpiridoxine();
  row[8]=list.get(i).getvitamin_B12();
  row[9]=list.get(i).getfolic_acid();
  row[10]=list.get(i).getVitamin_C();
  row[11]=list.get(i).getVitamin_D();
  row[12]=list.get(i).getvitamin_E();
  row[13]=list.get(i).getvitamin_k();
  

  mode9.addRow(row);
    }    
  
    } 
 

 public ArrayList<vitamins_desert> vitamins_desertList(){
        ArrayList<vitamins_desert>vitamins_desertList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q1="SELECT * FROM `content_vitamins_in_dessert` WHERE 1";
          Statement st1= conn.createStatement();
          ResultSet rs1=st1.executeQuery(q1);
        vitamins_desert vitamins_desert1;
          while (rs1.next()){
              vitamins_desert1= new  vitamins_desert(rs1.getInt("DessertId"),rs1.getFloat("Vitamin_A"),rs1.getFloat("Thiamin"),rs1.getFloat("Ribloflevin"),rs1.getInt("niacin"),rs1.getInt("pantothenic"),
              rs1.getFloat("biotin"),rs1.getFloat("piridoxine"),rs1.getFloat("vitamin_B12"),rs1.getFloat("folic_acid"),rs1.getFloat("Vitamin_C"),rs1.getFloat("Vitamin_D"),
                      rs1.getFloat("vitamin_E"),rs1.getFloat("vitamin_k"));
                 vitamins_desertList.add(vitamins_desert1);
          }    
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return vitamins_desertList;
    }
 public void show_vitamins_desertList(){
  ArrayList<vitamins_desert> list =vitamins_desertList();
  DefaultTableModel mode9=(DefaultTableModel)jTable14.getModel();
   Object[] row =new Object[14];for (int i=0;i<list.size();i++){
  row[0]=list.get(i).getDessertId();
  row[1]=list.get(i).getVitamin_A();
  row[2]=list.get(i).getThiamin();
  row[3]=list.get(i).getRibloflevin();
  row[4]=list.get(i).getniacin();
  row[5]=list.get(i).getpantothenic();
  row[6]=list.get(i).getbiotin();
  row[7]=list.get(i).getpiridoxine();
  row[8]=list.get(i).getvitamin_B12();
  row[9]=list.get(i).getfolic_acid();
  row[10]=list.get(i).getVitamin_C();
  row[11]=list.get(i).getVitamin_D();
  row[12]=list.get(i).getvitamin_E();
  row[13]=list.get(i).getvitamin_k();
  

  mode9.addRow(row);
    }    
  
    }    
 
 
 
 
    //____________________________________________________________________________________________________________________________
            
                
   public ArrayList<checkDelet>checkDeletList(){
        ArrayList<checkDelet>checkDeletList =new ArrayList<>();
    try {
       
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
         //  pre=(PreparedStatement) conn.prepareStatement(sq1);
          String q="SELECT customerId  FROM `orderd` WHERE 1";
          Statement st= conn.createStatement();
          ResultSet rs=st.executeQuery(q);
         checkDelet checkDelet1;
          while (rs.next()){
              checkDelet1= new checkDelet(rs.getInt("customerId"));
                 

               checkDeletList.add(checkDelet1);
          }
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } return checkDeletList;
    }                
                
   public void delete(){   
                 
            
           
           ArrayList<checkDelet> list2= checkDeletList();
            for (int i=0;i<list2.size();i++){     
              
     try {
            String sq4="DELETE FROM `customer` WHERE customerId =?" ;
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
           pre=(PreparedStatement) conn.prepareStatement(sq4);
         
          pre.setInt(1, list2.get(i).getcustomerId()   );
           pre.executeUpdate();
           DefaultTableModel mode2=(DefaultTableModel)jTable7.getModel();
          mode2.setRowCount(0);
          show_customer();
         
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } }
            
            
            
            
            ArrayList<checkDelet> list1= checkDeletList();
                
                
           for (int i=0;i<list1.size();i++){     
              
     try {
            String sq4="DELETE FROM orderd WHERE customerId =?" ;
           conn= (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/online_food_order","root","");
           pre=(PreparedStatement) conn.prepareStatement(sq4);
         
          pre.setInt(1, list1.get(i).getcustomerId()   );
           pre.executeUpdate();
           DefaultTableModel mode1=(DefaultTableModel)jTable1.getModel();
          mode1.setRowCount(0);
          show_user();
         
        }
        catch (SQLException |HeadlessException ex ) {
            JOptionPane.showMessageDialog(null,ex);
        } } 
             
            JOptionPane.showMessageDialog(null,"delete success!!!");
            
       
   
   } 
           
   public  void close(){
WindowEvent windowClose= new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(windowClose);
}
 // ______________________________________________________________________________________________________________________________
          
   public  void update(){
    DefaultTableModel mode1=(DefaultTableModel)jTable2.getModel();
            mode1.setRowCount(0);
            show_rice_varietiesList();
 
   DefaultTableModel mode2 = (DefaultTableModel)jTable3.getModel();
           mode2.setRowCount(0);
           show_vegetablesList();
  
           
    DefaultTableModel mode3=(DefaultTableModel)jTable4.getModel();
           mode3.setRowCount(0);
         show_meat_and_fishList();
   
         
     DefaultTableModel mode4=(DefaultTableModel)jTable5.getModel();
         mode4.setRowCount(0);
         show_dessertList();
   
         
     DefaultTableModel mode5=(DefaultTableModel)jTable6.getModel();
         mode5.setRowCount(0);
         show_daily_need_nutritionList();
         
         
     DefaultTableModel mode6=(DefaultTableModel)jTable8.getModel();
            mode6.setRowCount(0);
            show_minarals_riceList();
            
            
       DefaultTableModel mode7=(DefaultTableModel)jTable9.getModel();
            mode7.setRowCount(0);     
            show_rice_nutritionList();
  
            
        DefaultTableModel mode8=(DefaultTableModel)jTable10.getModel();
         mode8.setRowCount(0);  
         show_vitamins_riceList();
         
         
         
        
        DefaultTableModel mode9=(DefaultTableModel)jTable15.getModel();
         mode9.setRowCount(0);  
        show_nutrition_meat_and_fishList();
        
        
        DefaultTableModel mode10=(DefaultTableModel)jTable19.getModel();
        mode10.setRowCount(0);  
        show_nutrition_vegetablesList();
       
        
        DefaultTableModel mode11=(DefaultTableModel)jTable13.getModel();
         mode11.setRowCount(0);  
        show_nutrition_desertList();
        
         
        
         DefaultTableModel mode13=(DefaultTableModel)jTable18.getModel();
         mode13.setRowCount(0);  
        show_minarals_vegetablesList();
        
        DefaultTableModel mode14=(DefaultTableModel)jTable16.getModel();
         mode14.setRowCount(0);  
         show_minarals_meat_and_fishList();
         
         DefaultTableModel mode15=(DefaultTableModel)jTable12.getModel();
         mode15.setRowCount(0);  
        show_minarals_desertList();
        
        
        DefaultTableModel mode16=(DefaultTableModel)jTable17.getModel();
         mode16.setRowCount(0);  
        show_vitamins_meat_and_fishList();
        
       DefaultTableModel mode17=(DefaultTableModel)jTable20.getModel();
         mode17.setRowCount(0);  
        show_vitamins_vegetablesList();
        
        
        DefaultTableModel mode18=(DefaultTableModel)jTable14.getModel();
         mode18.setRowCount(0);  
        show_vitamins_desertList();
    }  
         
         
         
         
         
  }        
          
     
          
  
